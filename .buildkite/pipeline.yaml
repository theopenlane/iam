env:
  APP_NAME: ${BUILDKITE_PIPELINE_SLUG}
  SONAR_HOST: "https://sonarcloud.io"
steps:
  - group: ":knife: Pre-check"
    key: "precheck"
    steps:
      - label: ":golang: go generate"
        key: "generate"
        plugins:
          - docker#v5.11.0:
              image: "ghcr.io/theopenlane/build-image:latest"
              always-pull: true
              command: ["task", "ci"]
              environment:
                - "GOTOOLCHAIN=auto"
  - group: ":test_tube: Tests"
    key: "tests"
    depends_on: "precheck"
    steps:
      - label: ":golangci-lint: lint :lint-roller:"
        key: "lint"
        plugins:
          - docker#v5.11.0:
              image: "ghcr.io/theopenlane/build-image:latest"
              always-pull: true
              cancel_on_build_failing: true
              command: ["task", "go:lint"]
              environment:
                - "GOTOOLCHAIN=auto"
      - label: ":golang: go test"
        key: "go_test"
        plugins:
          - docker#v5.11.0:
              image: "ghcr.io/theopenlane/build-image:latest"
              always-pull: true
              command: ["task", "go:test:cover"]
        artifact_paths: ["coverage.out"]
      - label: ":test_tube: generate example"
        key: "example_generate"
        plugins:
          - docker#v5.11.0:
              image: "ghcr.io/theopenlane/build-image:latest"
              always-pull: true
              workdir: "/fgax"
              command: ["task", "example:generate"]
              environment:
                - "GOTOOLCHAIN=auto"
                - "GODEBUG=gotypesalias=0"
  - group: ":closed_lock_with_key: Security Checks"
    depends_on: "tests"
    key: "security"
    steps:
      - label: ":closed_lock_with_key: gosec"
        key: "gosec"
        plugins:
          - docker#v5.11.0:
              image: "securego/gosec:2.20.0"
              command: ["-no-fail", "-exclude-generated", "-fmt sonarqube", "-out", "results.txt", "./..."]
              environment:
                - "GOTOOLCHAIN=auto"
        artifact_paths: ["results.txt"]
      - label: ":github: upload PR reports"
        key: "scan-upload-pr"
        if: build.pull_request.id != null
        depends_on: ["gosec", "go_test"]
        plugins:
          - artifacts#v1.9.4:
              download: "results.txt"
          - artifacts#v1.9.4:
              download: "coverage.out"
              step: "go_test"
          - docker#v5.11.0:
              image: "sonarsource/sonar-scanner-cli:11"
              environment:
                - "SONAR_TOKEN"
                - "SONAR_HOST_URL=$SONAR_HOST"
                - "SONAR_SCANNER_OPTS=-Dsonar.pullrequest.branch=$BUILDKITE_BRANCH -Dsonar.pullrequest.base=$BUILDKITE_PULL_REQUEST_BASE_BRANCH -Dsonar.pullrequest.key=$BUILDKITE_PULL_REQUEST"
      - label: ":github: upload reports"
        key: "scan-upload"
        if: build.branch == "main"
        depends_on: ["gosec", "go_test"]
        plugins:
          - artifacts#v1.9.4:
              download: results.txt
          - artifacts#v1.9.4:
              download: coverage.out
              step: "go_test"
          - docker#v5.11.0:
              image: "sonarsource/sonar-scanner-cli:11"
              environment:
                - "SONAR_TOKEN"
                - "SONAR_HOST_URL=$SONAR_HOST"
