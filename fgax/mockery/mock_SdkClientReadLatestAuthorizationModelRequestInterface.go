// Code generated by mockery. DO NOT EDIT.

package client

import (
	context "context"

	client "github.com/openfga/go-sdk/client"

	mock "github.com/stretchr/testify/mock"

	openfga "github.com/openfga/go-sdk"
)

// MockSdkClientReadLatestAuthorizationModelRequestInterface is an autogenerated mock type for the SdkClientReadLatestAuthorizationModelRequestInterface type
type MockSdkClientReadLatestAuthorizationModelRequestInterface struct {
	mock.Mock
}

type MockSdkClientReadLatestAuthorizationModelRequestInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSdkClientReadLatestAuthorizationModelRequestInterface) EXPECT() *MockSdkClientReadLatestAuthorizationModelRequestInterface_Expecter {
	return &MockSdkClientReadLatestAuthorizationModelRequestInterface_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields:
func (_m *MockSdkClientReadLatestAuthorizationModelRequestInterface) Execute() (*openfga.ReadAuthorizationModelResponse, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 *openfga.ReadAuthorizationModelResponse
	var r1 error
	if rf, ok := ret.Get(0).(func() (*openfga.ReadAuthorizationModelResponse, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *openfga.ReadAuthorizationModelResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*openfga.ReadAuthorizationModelResponse)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
func (_e *MockSdkClientReadLatestAuthorizationModelRequestInterface_Expecter) Execute() *MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call {
	return &MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call{Call: _e.mock.On("Execute")}
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call) Run(run func()) *MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call) Return(_a0 *openfga.ReadAuthorizationModelResponse, _a1 error) *MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call) RunAndReturn(run func() (*openfga.ReadAuthorizationModelResponse, error)) *MockSdkClientReadLatestAuthorizationModelRequestInterface_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// GetContext provides a mock function with given fields:
func (_m *MockSdkClientReadLatestAuthorizationModelRequestInterface) GetContext() context.Context {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetContext")
	}

	var r0 context.Context
	if rf, ok := ret.Get(0).(func() context.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetContext'
type MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call struct {
	*mock.Call
}

// GetContext is a helper method to define mock.On call
func (_e *MockSdkClientReadLatestAuthorizationModelRequestInterface_Expecter) GetContext() *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call {
	return &MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call{Call: _e.mock.On("GetContext")}
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call) Run(run func()) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call) Return(_a0 context.Context) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call) RunAndReturn(run func() context.Context) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetContext_Call {
	_c.Call.Return(run)
	return _c
}

// GetOptions provides a mock function with given fields:
func (_m *MockSdkClientReadLatestAuthorizationModelRequestInterface) GetOptions() *client.ClientReadLatestAuthorizationModelOptions {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetOptions")
	}

	var r0 *client.ClientReadLatestAuthorizationModelOptions
	if rf, ok := ret.Get(0).(func() *client.ClientReadLatestAuthorizationModelOptions); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*client.ClientReadLatestAuthorizationModelOptions)
		}
	}

	return r0
}

// MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOptions'
type MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call struct {
	*mock.Call
}

// GetOptions is a helper method to define mock.On call
func (_e *MockSdkClientReadLatestAuthorizationModelRequestInterface_Expecter) GetOptions() *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call {
	return &MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call{Call: _e.mock.On("GetOptions")}
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call) Run(run func()) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call) Return(_a0 *client.ClientReadLatestAuthorizationModelOptions) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call) RunAndReturn(run func() *client.ClientReadLatestAuthorizationModelOptions) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetOptions_Call {
	_c.Call.Return(run)
	return _c
}

// GetStoreIdOverride provides a mock function with given fields:
func (_m *MockSdkClientReadLatestAuthorizationModelRequestInterface) GetStoreIdOverride() *string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetStoreIdOverride")
	}

	var r0 *string
	if rf, ok := ret.Get(0).(func() *string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	return r0
}

// MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetStoreIdOverride'
type MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call struct {
	*mock.Call
}

// GetStoreIdOverride is a helper method to define mock.On call
func (_e *MockSdkClientReadLatestAuthorizationModelRequestInterface_Expecter) GetStoreIdOverride() *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call {
	return &MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call{Call: _e.mock.On("GetStoreIdOverride")}
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call) Run(run func()) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call) Return(_a0 *string) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call) RunAndReturn(run func() *string) *MockSdkClientReadLatestAuthorizationModelRequestInterface_GetStoreIdOverride_Call {
	_c.Call.Return(run)
	return _c
}

// Options provides a mock function with given fields: options
func (_m *MockSdkClientReadLatestAuthorizationModelRequestInterface) Options(options client.ClientReadLatestAuthorizationModelOptions) client.SdkClientReadLatestAuthorizationModelRequestInterface {
	ret := _m.Called(options)

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 client.SdkClientReadLatestAuthorizationModelRequestInterface
	if rf, ok := ret.Get(0).(func(client.ClientReadLatestAuthorizationModelOptions) client.SdkClientReadLatestAuthorizationModelRequestInterface); ok {
		r0 = rf(options)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(client.SdkClientReadLatestAuthorizationModelRequestInterface)
		}
	}

	return r0
}

// MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Options'
type MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call struct {
	*mock.Call
}

// Options is a helper method to define mock.On call
//   - options client.ClientReadLatestAuthorizationModelOptions
func (_e *MockSdkClientReadLatestAuthorizationModelRequestInterface_Expecter) Options(options interface{}) *MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call {
	return &MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call{Call: _e.mock.On("Options", options)}
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call) Run(run func(options client.ClientReadLatestAuthorizationModelOptions)) *MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(client.ClientReadLatestAuthorizationModelOptions))
	})
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call) Return(_a0 client.SdkClientReadLatestAuthorizationModelRequestInterface) *MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call) RunAndReturn(run func(client.ClientReadLatestAuthorizationModelOptions) client.SdkClientReadLatestAuthorizationModelRequestInterface) *MockSdkClientReadLatestAuthorizationModelRequestInterface_Options_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSdkClientReadLatestAuthorizationModelRequestInterface creates a new instance of MockSdkClientReadLatestAuthorizationModelRequestInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSdkClientReadLatestAuthorizationModelRequestInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSdkClientReadLatestAuthorizationModelRequestInterface {
	mock := &MockSdkClientReadLatestAuthorizationModelRequestInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
